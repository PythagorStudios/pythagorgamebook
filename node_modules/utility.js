/**
 * Created by finnb on 8/11/16.
 */

var mysql = require('mysql');
var fs = require('fs');


//Constants
module.exports.pageTitle = "Game Books";


console.log("Reading MYSQL config...");
var connectionData = JSON.parse(fs.readFileSync('/home/finnb/nodejs-mysql.cfg'));
connectionData.database = "gamebooks";
console.log("Done.");

module.exports.query = function(string, callback) {
    var connection = mysql.createConnection(connectionData);

    connection.connect(function (err) {
        if (err) {
            throw "Could not connect to mysql: " + err;
            callback(null, null);
        }

        connection.query(string, function (err, rows, fields) {
            console.log("Queried mysql: " + string);
            connection.end();
            callback(rows, fields);
        });
    });
};

module.exports.initDB = function(callback)
{
  this.query("CREATE TABLE IF NOT EXISTS Books (title VARCHAR(63) UNIQUE, id INT UNIQUE AUTO_INCREMENT, coverImageUrl VARCHAR(255) DEFAULT NULL, author VARCHAR(63), published INT DEFAULT 0, dateCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP, description VARCHAR(255));", function(rows) {
      if (rows == null) {
          console.log("Failed to create table Books.");
      }
      else {
          callback();
      }
  });
};

module.exports.getGameBookById = function(id, callback)
{
    this.query("SELECT * FROM Books WHERE id=" + sanInput(id) + ";", function(rows) {
        if (rows == null)
        {
            console.log("Failed to get gamebook with id " + id + ".");
        }
        else
        {
            callback(rows[0]);
        }
    });
};

module.exports.getGameBookListing = function(callback)
{
  this.query("SELECT title, id, author, description, dateCreated, dateModified FROM Books WHERE published=1;", function(rows) {
      if (rows == null)
      {
          console.log("Failed to get gamebook listing.");
      }
      else {
          callback(rows);
      }
  });
};

module.exports.createGameBook = function(title, author, description, callback)
{
    this.query("INSERT INTO Books (title, author, description, published) VALUES ('" + sanInput(title) + "', '" + sanInput(author) + "', '" + sanInput(description) + "', 1);", function(rows) {
        if (rows == null) {
            console.log("Failed to create gamebook " + title + ".");
        }
        else {
            callback();
        }
    });
};

var sanInput = function(input)
{
    return input.replace(';', '').replace('--', '').replace("'", "").replace('"', '');
}
